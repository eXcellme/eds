<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>com.coderjerry</groupId>
		<artifactId>eds-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>eds-consumer</artifactId>
	<name>eds-consumer</name>
	<packaging>war</packaging>
	<!-- spring boot for test -->
	<!-- <packaging>jar</packaging> -->
	<properties>
		<!-- productCode -->
		<log.parent>/data/www/logs/</log.parent>
	</properties>
	<profiles>
		<!-- 开发环境 -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<prop.jms.userName>system</prop.jms.userName>
				<prop.jms.password>manage</prop.jms.password>
				<prop.jms.brokerUrl><![CDATA[tcp://192.168.3.103:61618]]></prop.jms.brokerUrl>

				<prop.redisHost>192.168.3.91</prop.redisHost>
				<prop.redisPort>6380</prop.redisPort>
				<prop.redisPass>paypay</prop.redisPass>
				<prop.redisTimeout>6000</prop.redisTimeout>
				<prop.redisMaxActive>100</prop.redisMaxActive>
				<prop.redisMaxIdle>100</prop.redisMaxIdle>
				<prop.redisMaxWait>600000</prop.redisMaxWait>
				<prop.redisTestOnBorrow>true</prop.redisTestOnBorrow>

				<prop.kafkaAddress><![CDATA[192.168.3.76:9092?zookeeperHost=192.168.3.76&zookeeperPort=2181&groupId=group1&topic=]]></prop.kafkaAddress>

				<prop.gearmanAddress><![CDATA[192.168.3.197:4730]]></prop.gearmanAddress>
				<!-- jdbc -->
				<prop.jdbc.url>jdbc:h2:~/test</prop.jdbc.url>
				<prop.jdbc.username>sa</prop.jdbc.username>
				<prop.jdbc.password></prop.jdbc.password>
				<prop.jdbc.initialSize>5</prop.jdbc.initialSize>
				<prop.jdbc.minIdle>10</prop.jdbc.minIdle>
				<prop.jdbc.maxActive>100</prop.jdbc.maxActive>
				<prop.jdbc.maxWait>60000</prop.jdbc.maxWait>
				<!-- 销毁检测间隔 -->
				<prop.jdbc.timeBetweenEvictionRunsMillis>10000</prop.jdbc.timeBetweenEvictionRunsMillis>
				<!-- 最小存活时间 -->
				<prop.jdbc.minEvictableIdleTimeMillis>40000</prop.jdbc.minEvictableIdleTimeMillis>
				<prop.jdbc.testWhileIdle>true</prop.jdbc.testWhileIdle>
				<prop.jdbc.testOnBorrow>false</prop.jdbc.testOnBorrow>
				<prop.jdbc.testOnReturn>false</prop.jdbc.testOnReturn>
				<prop.jdbc.poolPreparedStatements>false</prop.jdbc.poolPreparedStatements>
				<prop.jdbc.maxPoolPreparedStatementPerConnectionSize>20</prop.jdbc.maxPoolPreparedStatementPerConnectionSize>
				<prop.jdbc.removeAbandoned>true</prop.jdbc.removeAbandoned>
				<prop.jdbc.logAbandoned>true</prop.jdbc.logAbandoned>
				<prop.jdbc.removeAbandonedTimeout>180</prop.jdbc.removeAbandonedTimeout>
				<prop.jdbc.timeBetweenLogStatsMillis>1800000</prop.jdbc.timeBetweenLogStatsMillis>
				<prop.jdbc.phyTimeoutMillis>100000</prop.jdbc.phyTimeoutMillis>
				<prop.jdbc.maxEvictableIdleTimeMillis>100000</prop.jdbc.maxEvictableIdleTimeMillis>
				<!-- eds client配置 -->
				<eds-client.activemq.brokerUrl><![CDATA[tcp://192.168.3.103:61618]]></eds-client.activemq.brokerUrl>
				<eds-client.activemq.concurrent>2</eds-client.activemq.concurrent>
				<eds-client.activemq.redoFileName>${log.parent}eds-consumer-dev/eds-client/redo/mapdb</eds-client.activemq.redoFileName>
				<prop.spring.profiles.active>dev</prop.spring.profiles.active>
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>com.coderjerry</groupId>
			<artifactId>eds-dispatch</artifactId>
		</dependency>
		<dependency>
			<groupId>com.coderjerry</groupId>
			<artifactId>eds-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
		</dependency>
		<!-- log4j2 log4j bridge -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
		</dependency>
		<!-- log4j2 slf4j bridge -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.coderjerry</groupId>
			<artifactId>eds-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-jms-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-javaconfig</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
		</dependency>
		<!-- spring boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<!-- 不使用默认的log(commons-logging) -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-data-mongodb</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- spring-boot production-ready features -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- 兼容老容器 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-legacy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.apache.activemq</groupId> <artifactId>activemq-all</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>
		<dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpasyncclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<delimiters>
						<!--<delimiter>@</delimiter>-->
						<delimiter>${*}</delimiter>
					</delimiters>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> 
				<configuration> <mainClass>org.apache.camel.spring.boot.FatJarRouter</mainClass> 
				</configuration> <executions> <execution> <goals> <goal>repackage</goal> 
				</goals> </execution> </executions> </plugin> -->

		</plugins>
	</build>
</project>

